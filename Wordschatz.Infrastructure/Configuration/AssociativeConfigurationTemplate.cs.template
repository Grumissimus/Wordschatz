using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Wordschatz.Domain.Models;

namespace Wordschatz.Infrastructure.Configuration
{
	public class <+entity_a+><+entity_b+>sEntityConfiguration : IEntityTypeConfiguration<<+entity_a+><+entity_b+>s>
	{
		public void Configure(EntityTypeBuilder<<+entity_a+><+entity_b+>s> builder)
		{
            builder.HasKey(a => new { a.<+entity_a+>Id, a.<+entity_b+>Id });

            builder.HasOne(b => b.<+entity_a+>)
                .WithMany(a => a.<+entity_b+>s)
                .HasForeignKey(b => b.<+entity_a+>Id)
                .OnDelete(DeleteBehavior.Restrict);

            builder.HasOne(a => a.<+entity_b+>)
                .WithMany(b => b.<+entity_a+>s)
                .HasForeignKey(a => a.<+entity_b+>Id)
                .OnDelete(DeleteBehavior.Restrict);

			builder.ToTable("<+entity_a+><+entity_b+>s");
		}
	}
}

